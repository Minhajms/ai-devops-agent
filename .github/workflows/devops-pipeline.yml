name: AI-Powered DevOps Pipeline
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run security checks
      run: |
        bandit -r . -ll
        # Use Safety DB API key for non-interactive scanning
        pip install safety
        safety check --key ${{ secrets.SAFETY_API_KEY }} --full-report

    - name: Run tests
      run: |
        pytest -n auto --junitxml=test-results.xml --cov=scripts --cov-report=xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results.xml
        if-no-files-found: error

    - name: Upload coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml
        if-no-files-found: error

    - name: Train model
      run: python scripts/train_model.py

    - name: Predict risks
      run: python scripts/predict_risk.py
      env:
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}

    - name: Notify Slack
      if: always()  # Run even if previous steps fail
      env:
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      run: |
        python scripts/notify_slack.py "${{ job.status }}"
