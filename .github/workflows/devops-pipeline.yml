name: AI-Powered DevOps Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Daily run

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run security checks
      run: |
        pip install bandit safety
        bandit -r . -ll
        safety check

    - name: Run tests
      id: test
      run: |
        pytest -n auto --junitxml=test-results.xml | tee build_log.txt
      continue-on-error: true

    - name: Check for issues
      id: check_issues
      run: |
        python scripts/self_heal.py
        echo "has_issues=$(grep -c "Error" build_log.txt || true)" >> $GITHUB_OUTPUT

    - name: Retry tests if needed
      if: steps.check_issues.outputs.has_issues != '0'
      run: |
        pytest -n auto --junitxml=test-results.xml

    - name: Train and validate model
      run: |
        python scripts/train_model.py

    - name: Predict Pipeline Risk
      run: |
        python scripts/predict_risk.py

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results.xml
          build_log.txt
          models/

    - name: Notify Slack
      if: always()
      env:
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      run: |
        python scripts/notify_slack.py "$(if [ '${{ job.status }}' == 'success' ]; then echo '✅ Build succeeded'; else echo '❌ Build failed'; fi)"
